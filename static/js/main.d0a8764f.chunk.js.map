{"version":3,"sources":["components/Map/Map.js","components/Categories/Categories.js","constants.js","actions.js","controllers/Categories.js","helpers.js","components/Form/Form.js","controllers/Form.js","controllers/Map.js","components/App/App.js","serviceWorker.js","reducers.js","store.js","index.js"],"names":["ICONS","cinema","preset","club","restaurant","Map","state","isReady","getUrl","baseUrl","apiKey","language","query","lang","queryString","stringify","mapLoaded","Promise","resolve","ymaps","global","ready","initMap","center","zoom","map","searchControlProvider","setState","setMapCenter","coordinates","setCenter","generatePlacemarks","points","address","category","name","description","Placemark","balloonContentHeader","balloonContentBody","balloonContentFooter","hintContent","addPoints","geoObjects","removeAll","forEach","geoObject","add","loadjs","this","props","returnPromise","prevProps","id","className","Component","defaultProps","Categories","categories","handlers","selected","key","Checkbox","onChange","onToogleCategory","bind","checked","label","CONSTANTS","API_KEY","MAP_CENTER","addPoint","payload","dispatch","type","searchByAddress","value","a","apikey","geocode","format","url","fetch","response","json","jsonResponse","collection","get","item","split","parseFloat","reverse","clearSearchResults","toggleCategory","connect","bindActionCreators","actions","children","React","cloneElement","callAll","fns","args","fn","AddPointForm","defaultState","showModal","button","Button","color","toggleModal","clearForm","setFormValue","_","selectAddress","onClearSearchResults","onSearchByAddress","onSubmit","e","preventDefault","isValid","formProps","onAddPoint","onSetMapCenter","searchByAddressDebounced","debounce","locations","Modal","size","closeIcon","open","onClose","onOpen","trigger","Content","Form","autoComplete","Field","control","Input","length","Segment","Group","location","onClick","Select","options","categoryOptions","TextArea","rows","text","Object","values","every","mapCenter","selectedCategories","filter","visiblePoints","includes","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","reducers","action","list","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d0a8764f.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport loadjs from 'loadjs'\nimport queryString from 'query-string'\n\nimport './Map.css'\n\nconst MAP_URL = 'https://api-maps.yandex.ru/2.1/'\nconst CONTAINER_ID = 'map'\nconst ICONS = {\n\tcinema: {\n\t\tpreset: 'islands#redCinemaIcon'\n\t},\n\tclub: {\n\t\tpreset: 'islands#greenNightClubIcon'\n\t},\n\trestaurant: {\n\t\tpreset: 'islands#blueFoodIcon'\n\t},\n}\n\nclass Map extends Component {\n\tstate = {\n\t\tisReady: false\n\t}\n\n\tasync componentDidMount() {\n\t\tawait loadjs(\n\t\t\tthis.getUrl(MAP_URL, this.props),\n\t\t\t{ returnPromise: true }\n\t\t)\n\t\tawait this.mapLoaded()\n\t\tthis.initMap(this.props)\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst { center } = this.props\n\n\t\tif (prevProps.center !== center) {\n\t\t\tthis.setMapCenter(center)\n\t\t}\n\n\t\tif (this.state.isReady) {\n\t\t\tthis.addPoints(this.props.points)\n\t\t}\n\t}\n\n\tgetUrl = (baseUrl, { apiKey, language } = {}) => {\n\t\tconst query = {\n\t\t\tapiKey,\n\t\t\tlang: language\n\t\t}\n\n\t\treturn `${baseUrl}?${queryString.stringify(query)}`\n\t}\n\n\tmapLoaded = () => (\n\t\tnew Promise(resolve => {\n\t\t\tthis.ymaps = global.ymaps\n\t\t\tthis.ymaps.ready(resolve)\n\t\t})\n\t)\n\n\tinitMap = ({ center, zoom } = {}) => {\n\t\tthis.map = new this.ymaps.Map(\n\t\t\tCONTAINER_ID,\n\t\t\t{\n\t\t\t\tcenter,\n\t\t\t\tzoom\n\t\t\t},\n\t\t\t{\n\t\t\t\tsearchControlProvider: 'yandex#search'\n\t\t\t}\n\t\t)\n\n\t\tthis.setState({ isReady: true })\n\t}\n\n\tsetMapCenter = coordinates => this.map.setCenter(coordinates);\n\n\tgeneratePlacemarks = (points = []) => (\n\t\tpoints.map(({ address, category, coordinates, name, description  }) => (\n\t\t\tnew this.ymaps.Placemark(\n\t\t\t\tcoordinates,\n\t\t\t\t{\n\t\t\t\t\tballoonContentHeader: name,\n\t\t\t\t\tballoonContentBody: description,\n\t\t\t\t\tballoonContentFooter: address,\n\t\t\t\t\thintContent: name\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreset: 'islands#yellowStarIcon',\n\t\t\t\t\t...ICONS[ category ]\n\t\t\t\t}\n\t\t\t)\n\t\t))\n\t)\n\n\taddPoints = (points = []) => {\n\t\tthis.map.geoObjects.removeAll()\n\n\t\tthis.generatePlacemarks(points).forEach(geoObject => (\n\t\t\tthis.map.geoObjects.add(geoObject)\n\t\t))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={CONTAINER_ID}\n\t\t\t\tclassName=\"map\"\n\t\t\t/>\n\t\t)\n\t}\n}\n\nMap.propTypes = {\n\tapiKey: PropTypes.string,\n\tcenter: PropTypes.arrayOf(\n\t\tPropTypes.number\n\t),\n\tlanguage: PropTypes.string,\n\tpoints: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tcoordinates: PropTypes.arrayOf(\n\t\t\t\tPropTypes.number\n\t\t\t),\n\t\t\tname: PropTypes.string,\n\t\t\taddress: PropTypes.string,\n\t\t\tdescription: PropTypes.string,\n\t\t\tcategory: PropTypes.string\n\t\t})\n\t),\n\tzoom: PropTypes.number\n}\n\nMap.defaultProps = {\n\tlanguage: 'ru_RU',\n\tpoints: [],\n\tzoom: 10\n}\n\nexport default Map\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Checkbox } from 'semantic-ui-react'\nimport './Categories.css'\n\nconst Categories = ({ categories, handlers }) => (\n\t<div className=\"categories\">\n\t\t{categories.map(({ id, name, selected }) => (\n\t\t\t<div\n\t\t\t\tclassName=\"category\"\n\t\t\t\tkey={id}\n\t\t\t>\n\t\t\t\t<Checkbox\n\t\t\t\t\tkey={id}\n\t\t\t\t\tonChange={handlers.onToogleCategory.bind(this, id)}\n\t\t\t\t\tchecked={selected}\n\t\t\t\t\tlabel={name}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t))}\n\t</div>\n)\n\nCategories.propTypes = {\n\thandlers: PropTypes.shape({\n\t\tonToogleCategory: PropTypes.func\n\t}),\n\tcategories: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string,\n\t\t\tname: PropTypes.string,\n\t\t\tselected: PropTypes.bool\n\t\t})\n\t)\n}\n\nCategories.defaultProps = {\n\thandlers: {},\n\tcategories: []\n}\n\nexport default Categories\n","const CONSTANTS = {\n\tAPI_KEY: '35831a5e-2de7-4646-90fe-69d7d1790945',\n\tMAP_CENTER: [ 55.76, 37.64 ]\n}\n\nexport default CONSTANTS\n","import get from 'lodash.get'\nimport queryString from 'query-string'\n\nimport CONSTANTS from './constants'\n\nconst GEOCODE_URL = 'https://geocode-maps.yandex.ru/1.x/'\n\nexport default {\n\taddPoint: payload => dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'ADD_POINT',\n\t\t\tpayload\n\t\t})\n\t},\n\n\tsearchByAddress: value => async(dispatch) => {\n\t\tconst query = {\n\t\t\tapikey: CONSTANTS.API_KEY,\n\t\t\tgeocode: value,\n\t\t\tformat: 'json'\n\t\t}\n\n\t\tconst url = `${GEOCODE_URL}?${queryString.stringify(query)}`\n\t\tconst response = await fetch(url)\n\t\tconst jsonResponse = await response.json()\n\t\tconst collection = get(jsonResponse, 'response.GeoObjectCollection.featureMember') || []\n\t\tconst payload = collection.map(item => ({\n\t\t\tcoordinates: get(item, 'GeoObject.Point.pos').split(' ').map(parseFloat).reverse(),\n\t\t\tname: `${get(item, 'GeoObject.name')}, ${get(item, 'GeoObject.description')}`\n\t\t}))\n\n\t\tdispatch({\n\t\t\ttype: 'SET_LOCATIONS',\n\t\t\tpayload\n\t\t})\n\t},\n\n\tclearSearchResults: () => dispatch => {\n\t\tdispatch({ type: 'CLEAR_LOCATIONS' })\n\t},\n\n\tsetMapCenter: payload => dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'SET_MAP_CENTER',\n\t\t\tpayload\n\t\t})\n\t},\n\n\ttoggleCategory: id => dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'TOGGLE_CATEGORY',\n\t\t\tpayload: id\n\t\t})\n\t}\n}\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport actions from 'actions'\n\nconst CategoriesController = ({ children, categories, onToogleCategory }) => (\n\tReact.cloneElement(\n\t\tchildren,\n\t\t{\n\t\t\tcategories,\n\t\t\thandlers: {\n\t\t\t\tonToogleCategory\n\t\t\t}\n\t\t}\n\t)\n)\n\nexport default connect(\n\tstate => ({\n\t\tcategories: state.categories\n\t}),\n\tdispatch => bindActionCreators({\n\t\tonToogleCategory: actions.toggleCategory\n\t}, dispatch)\n)(CategoriesController)\n","export const callAll = (...fns) => (...args) => (\n\tfns.forEach(fn => fn && fn(...args))\n)\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport debounce from 'lodash.debounce'\nimport { Button, Form, Input, Modal, Segment, Select, TextArea } from 'semantic-ui-react'\n\nimport { callAll } from 'helpers'\nimport './Form.css'\n\nconst DEBOUNCE_WAIT = 1000\n\nclass AddPointForm extends Component {\n\tdefaultState = {\n\t\taddress: '',\n\t\tcategory: null,\n\t\tcoordinates: null,\n\t\tdescription: '',\n\t\tname: '',\n\t}\n\n\tstate = {\n\t\t...this.defaultState,\n\t\tshowModal: false\n\t}\n\n\tbutton = (\n\t\t<Button\n\t\t\tclassName=\"add-button\"\n\t\t\tcolor=\"red\"\n\t\t>\n\t\t\tДобавить заведение\n\t\t</Button>\n\t)\n\n\tget categoryOptions() {\n\t\treturn this.props.categories.map(({ id, name }) => ({\n\t\t\tkey: id,\n\t\t\ttext: name,\n\t\t\tvalue: id\n\t\t}))\n\t}\n\n\tget isValid() {\n\t\tconst { showModal, ...formProps } = this.state\n\n\t\treturn Object.values(formProps).every(value => !!value)\n\t}\n\n\ttoggleModal = () => (\n\t\tthis.setState(state => ({ showModal: !state.showModal }))\n\t)\n\n\tclearForm = () => this.setState({ ...this.defaultState })\n\n\tsetFormValue = name => (_, { value }) => (\n\t\tthis.setState({ [ name ]: value })\n\t)\n\n\tselectAddress = ({ coordinates, name: address }) => {\n\t\tthis.setState({\n\t\t\tcoordinates,\n\t\t\taddress\n\t\t})\n\n\t\tthis.props.handlers.onClearSearchResults()\n\t}\n\n\tsearchByAddress = () => {\n\t\tconst { handlers } = this.props\n\t\tconst { address } = this.state\n\n\t\thandlers.onSearchByAddress(address)\n\t}\n\n\tonSubmit = e => {\n\t\te.preventDefault()\n\n\t\tif (!this.isValid) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { handlers } = this.props\n\t\tconst { showModal, ...formProps } = this.state\n\n\t\thandlers.onAddPoint(formProps)\n\t\thandlers.onSetMapCenter(formProps.coordinates)\n\n\t\tthis.toggleModal()\n\t\tthis.clearForm()\n\t}\n\n\tsearchByAddressDebounced = debounce(this.searchByAddress, DEBOUNCE_WAIT)\n\n\trender() {\n\t\tconst { handlers, locations } = this.props\n\t\tconst { address, category, description, name, showModal } = this.state\n\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tsize=\"small\"\n\t\t\t\tcloseIcon\n\t\t\t\topen={showModal}\n\t\t\t\tonClose={this.toggleModal}\n\t\t\t\tonOpen={this.toggleModal}\n\t\t\t\ttrigger={this.button}\n\t\t\t>\n\t\t\t\t<Modal.Content>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tclassName=\"form\"\n\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\tcontrol={Input}\n\t\t\t\t\t\t\tlabel=\"Название заведения\"\n\t\t\t\t\t\t\tonChange={this.setFormValue('name')}\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\tcontrol={Input}\n\t\t\t\t\t\t\tonChange={callAll(\n\t\t\t\t\t\t\t\tthis.setFormValue('address'),\n\t\t\t\t\t\t\t\tthis.searchByAddressDebounced,\n\t\t\t\t\t\t\t\thandlers.onClearSearchResults\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tlabel=\"Адрес\"\n\t\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{!!locations.length && (\n\t\t\t\t\t\t\t<Segment.Group className=\"suggestions\">\n\t\t\t\t\t\t\t\t{locations.map(location => (\n\t\t\t\t\t\t\t\t\t<Segment\n\t\t\t\t\t\t\t\t\t\tkey={location.name}\n\t\t\t\t\t\t\t\t\t\tvalue={location.name}\n\t\t\t\t\t\t\t\t\t\tonClick={this.selectAddress.bind(this, location)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{location.name}\n\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Segment.Group>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\tcontrol={Select}\n\t\t\t\t\t\t\tlabel=\"Категория\"\n\t\t\t\t\t\t\tonChange={this.setFormValue('category')}\n\t\t\t\t\t\t\toptions={this.categoryOptions}\n\t\t\t\t\t\t\tvalue={category}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\tcontrol={TextArea}\n\t\t\t\t\t\t\tlabel=\"Краткое описание\"\n\t\t\t\t\t\t\tonChange={this.setFormValue('description')}\n\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button type='submit'>\n\t\t\t\t\t\t\tДобавить\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Content>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n}\n\nAddPointForm.propTypes = {\n\thandlers: PropTypes.shape({\n\t\tonAddPoint: PropTypes.func,\n\t\tonClearSearchResults: PropTypes.func,\n\t\tonSearchByAddress: PropTypes.func,\n\t\tonSetMapCenter: PropTypes.func\n\t}),\n\tcategories: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string,\n\t\t\tname: PropTypes.string,\n\t\t\tselected: PropTypes.bool\n\t\t})\n\t),\n\tlocations: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tname: PropTypes.string,\n\t\t\tcoordinates: PropTypes.arrayOf(\n\t\t\t\tPropTypes.number\n\t\t\t),\n\t\t})\n\t),\n}\n\nAddPointForm.defaultProps = {\n\thandlers: {},\n\tcategories: [],\n\tlocations: []\n}\n\nexport default AddPointForm\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport actions from 'actions'\n\nconst FormController = ({\n\tchildren, categories, locations, onAddPoint, onClearSearchResults,\n\tonSearchByAddress, onSetMapCenter\n}) => (\n\tReact.cloneElement(\n\t\tchildren,\n\t\t{\n\t\t\tcategories,\n\t\t\tlocations,\n\t\t\thandlers: {\n\t\t\t\tonAddPoint,\n\t\t\t\tonClearSearchResults,\n\t\t\t\tonSearchByAddress,\n\t\t\t\tonSetMapCenter\n\t\t\t}\n\t\t}\n\t)\n)\n\nexport default connect(\n\tstate => ({\n\t\tcategories: state.categories,\n\t\tlocations: state.locations\n\t}),\n\tdispatch => bindActionCreators({\n\t\tonAddPoint: actions.addPoint,\n\t\tonClearSearchResults: actions.clearSearchResults,\n\t\tonSearchByAddress: actions.searchByAddress,\n\t\tonSetMapCenter: actions.setMapCenter\n\t}, dispatch)\n)(FormController)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst MapController = ({ children, categories, center, points }) => {\n\tconst selectedCategories = categories\n\t\t.filter(({ selected}) => selected)\n\t\t.map(({ id }) => id)\n\n\tconst visiblePoints = points.filter(({ category }) =>\n\t\tselectedCategories.includes(category)\n\t)\n\n\treturn (\n\t\tReact.cloneElement(\n\t\t\tchildren,\n\t\t\t{\n\t\t\t\tcategories,\n\t\t\t\tcenter,\n\t\t\t\tpoints: visiblePoints\n\t\t\t}\n\t\t)\n\t)\n}\n\nexport default connect(\n\tstate => ({\n\t\tcategories: state.categories,\n\t\tcenter: state.mapCenter,\n\t\tpoints: state.points\n\t})\n)(MapController)\n","import React from 'react'\nimport './App.css'\n\nimport Categories from 'components/Categories'\nimport CategoriesController from 'controllers/Categories'\nimport Form from 'components/Form'\nimport FormController from 'controllers/Form'\nimport Map from 'components/Map'\nimport MapController from 'controllers/Map'\nimport CONSTANTS from 'constants'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"panel\">\n\t\t\t\t<CategoriesController>\n\t\t\t\t\t<Categories />\n\t\t\t\t</CategoriesController>\n\n\t\t\t\t<FormController>\n\t\t\t\t\t<Form />\n\t\t\t\t</FormController>\n\t\t\t</div>\n\n\t\t\t<div className=\"content\">\n\t\t\t\t<MapController>\n\t\t\t\t\t<Map\n\t\t\t\t\t\tapiKey={CONSTANTS.API_KEY}\n\t\t\t\t\t/>\n\t\t\t\t</MapController>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import CONSTANTS from './constants'\n\nconst initialState = {\n\tcategories: [\n\t\t{\n\t\t\tid: 'club',\n\t\t\tname: 'Клубы',\n\t\t\tselected: true\n\t\t},\n\t\t{\n\t\t\tid: 'restaurant',\n\t\t\tname: 'Рестораны',\n\t\t\tselected: true\n\t\t},\n\t\t{\n\t\t\tid: 'cinema',\n\t\t\tname: 'Кинотеатры',\n\t\t\tselected: false\n\t\t}\n\t],\n\tlocations: [],\n\tmapCenter: CONSTANTS.MAP_CENTER,\n\tpoints: [\n\t\t{\n\t\t\tcoordinates: [ 55.833436, 37.715175 ],\n\t\t\tname: 'Night Club 1',\n\t\t\taddress: 'address here',\n\t\t\tdescription: 'Some description....',\n\t\t\tcategory: 'club'\n\t\t},\n\t\t{\n\t\t\tcoordinates: [ 55.687086, 37.529789 ],\n\t\t\tname: 'Fast Food Restaurant',\n\t\t\taddress: 'address here',\n\t\t\tdescription: 'Some description....',\n\t\t\tcategory: 'restaurant'\n\t\t},\n\t\t{\n\t\t\tcoordinates: [ 55.782392, 37.614924 ],\n\t\t\tname: 'Italian Restaurant',\n\t\t\taddress: 'address here',\n\t\t\tdescription: 'Some description....',\n\t\t\tcategory: 'restaurant'\n\t\t},\n\t\t{\n\t\t\tcoordinates: [ 55.642063, 37.656123 ],\n\t\t\tname: 'CinemaPark',\n\t\t\taddress: 'address here',\n\t\t\tdescription: 'Some description....',\n\t\t\tcategory: 'cinema'\n\t\t},\n\t\t{\n\t\t\tcoordinates: [ 55.826479, 37.487208 ],\n\t\t\tname: 'Night Club 2',\n\t\t\taddress: 'address here',\n\t\t\tdescription: 'Some description....',\n\t\t\tcategory: 'club'\n\t\t},\n\t\t{\n\t\t\tcoordinates: [ 55.694843, 37.435023 ],\n\t\t\tname: 'Caro Premier',\n\t\t\taddress: 'address here',\n\t\t\tdescription: 'Some description....',\n\t\t\tcategory: 'cinema'\n\t\t},\n\t\t{\n\t\t\tcoordinates: [ 55.790139, 37.814052 ],\n\t\t\tname: 'Night Club 3',\n\t\t\taddress: 'address here',\n\t\t\tdescription: 'Some description....',\n\t\t\tcategory: 'club'\n\t\t}\n\t]\n}\n\nconst reducers = (state = initialState, action) => {\n\tswitch (action.type) {\n\n\tcase 'ADD_POINT': {\n\t\treturn {\n\t\t\t...state,\n\t\t\tpoints: [\n\t\t\t\t...state.points,\n\t\t\t\taction.payload\n\t\t\t]\n\t\t}\n\t}\n\n\tcase 'SET_CATEGORIES': {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcategories: action.payload\n\t\t}\n\t}\n\n\tcase 'CLEAR_CATEGORIES': {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcategories: initialState.list\n\t\t}\n\t}\n\n\tcase 'SET_LOCATIONS': {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocations: action.payload\n\t\t}\n\t}\n\n\tcase 'CLEAR_LOCATIONS': {\n\t\treturn {\n\t\t\t...state,\n\t\t\tlocations: initialState.locations\n\t\t}\n\t}\n\n\tcase 'TOGGLE_CATEGORY': {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcategories: state.categories.map(item => {\n\t\t\t\tif (item.id !== action.payload) {\n\t\t\t\t\treturn item\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tselected: !item.selected\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tcase 'SET_MAP_CENTER': {\n\t\treturn {\n\t\t\t...state,\n\t\t\tmapCenter: action.payload\n\t\t}\n\t}\n\n\tdefault:\n\t\treturn state\n\t}\n}\n\nexport default reducers\n","import reducers from './reducers'\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, createStore } from 'redux'\n\nexport default createStore(\n\treducers,\n\tapplyMiddleware(thunk)\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport './index.css'\nimport App from 'components/App'\nimport * as serviceWorker from './serviceWorker'\nimport store from './store'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}